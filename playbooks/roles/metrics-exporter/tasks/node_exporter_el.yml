---

- name: Create /var/lib/prometheus/node_exporter directory
  become: true
  file:
    path: "/var/lib/prometheus/node_exporter"
    state: directory
    owner: 'prometheus'
    group: 'prometheus'
  when: ('compute' in group_names)

- name: Download node_exporter {{ node_exporter }}
  become: true
  get_url:
    url: https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter }}/node_exporter-{{ node_exporter }}.linux-amd64.tar.gz
    dest: /tmp/node_exporter-{{ node_exporter }}.linux-amd64.tar.gz 
  when: ('compute' in group_names)

- name: Extract node_exporter {{ node_exporter }}.linux-amd64.tar.gz into /var/lib/prometheus/node_exporter/
  become: true
  unarchive:
    src: /tmp/node_exporter-{{ node_exporter }}.linux-amd64.tar.gz 
    dest: /var/lib/prometheus/node_exporter/
    extra_opts: [--strip-components=1]
    remote_src: yes    
  when: ('compute' in group_names)

- name: Recursively change ownership of a /var/lib/prometheus/node_exporter/
  become: true
  file:
    path: /var/lib/prometheus/node_exporter
    state: directory
    recurse: yes
    owner: prometheus
    group: prometheus 
  when: ('compute' in group_names)

- name: Create a symbolic link node_exporter
  become: true
  file:
    src: /var/lib/prometheus/node_exporter/node_exporter
    dest: /usr/bin/node_exporter
    state: link     
  when: ('compute' in group_names)

- name: Configure node_exporter service
  become: true
  copy:
    src: 'node_exporter.service'
    dest: '/usr/lib/systemd/system/node_exporter.service' 
  when: ('compute' in group_names)  


- name: Run command deactivate selinux for node_exporter, chcon  
  become: true
  command: chcon --reference=/bin/less /usr/bin/node_exporter
  when: ('compute' in group_names)

- name: Run command deactivate selinux for node_exporter, semanage  
  become: true
  command: semanage fcontext -a -t bin_t "/usr/bin/node_exporter"
  register: node_exporter
  failed_when: "node_exporter.rc != 0 and 'already defined' not in node_exporter.stderr"
  when: ('compute' in group_names)

- name: start node_exporter.service
  become: true
  service:
    name: node_exporter.service
    state: restarted
    enabled: true
  when: ('compute' in group_names) 
